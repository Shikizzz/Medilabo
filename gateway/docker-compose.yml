
version: '3.8'
services:
  gateway:
    container_name: gateway
    image: gateway:latest
    ports:
      - "8080:8080"
    networks:
      - my-network
    depends_on:
      - mysqldb
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/jwt
      - spring.datasource.username=root
      - spring.datasource.password=rootroot
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - medilabo.infoURL=http://info:8081
      - medilabo.notesURL=http://notes:8083
      - medilabo.riskURL=http://risk:8084

  front:
    container_name: front
    image: front:latest
    ports:
      - "8082:8082"
    networks:
      - my-network
    environment:
      - medilabo.gatewayURL=http://gateway:8080

  info:
    container_name: info
    image: info:latest
    ports:
      - "8081:8081"
    networks:
      - my-network
    depends_on:
      - mysqldb
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/info
      - spring.datasource.username=root
      - spring.datasource.password=rootroot
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

  notes:
    container_name: notes
    image: notes:latest
    ports:
      - "8083:8083"
    networks:
      - my-network
    depends_on:
      - mongodb
    environment:
      - spring.data.mongodb.uri=mongodb://mongodb:27017/medilabo

  risk:
    container_name: risk
    image: risk:latest
    ports:
      - "8084:8084"
    networks:
      - my-network
    environment:
      - medilabo.patientURL=http://info:8081/patient
      - medilabo.noteURL=http://notes:8083/note

  ### MySQL Container
  mysqldb:
    container_name: mysqldb
    image: mysql:latest
    environment:
      MYSQL_USER: springuser
      MYSQL_PASSWORD: ThePassword
      MYSQL_DATABASE: jwt
      MYSQL_ROOT_PASSWORD: rootroot
    ports:
      - "3306:3306"
    volumes:
      - "./db-init/data/jwtdata.sql:/docker-entrypoint-initdb.d/jwtdata.sql"
      - "./db-init/data/infodata.sql:/docker-entrypoint-initdb.d/infodata.sql"
    networks:
      - my-network


  mongodb:
    container_name: mongodb
    image: mongodb/mongodb-community-server:latest
    #environment:
      #MONGODB_INITDB_ROOT_USERNAME: root
      #MONGODB_INITDB_ROOT_PASSWORD: rootroot
    ports:
      - "27017:27017"
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - ./db-init/data:/tmp/data
    networks:
      - my-network

networks:
  my-network:
    driver: bridge